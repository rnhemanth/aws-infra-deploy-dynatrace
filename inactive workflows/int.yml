name: Deploy - int resources
on: 
  workflow_dispatch:
    inputs:
      Environment:
        description: 'AWS Account name'
        required: true
        type: choice
        default: "SELECT ACCOUNT"
        options:
          - "egton-onco-int-acc"
          - "supporttool-int-acc"
permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Deploy - ${{ github.event.inputs.Environment }}
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.Environment }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.INT_DEPLOYER_ROLE }}
          role-session-name: deploy-role-session
          aws-region: ${{ vars.AWS_REGION }}

      - uses: navikt/github-app-token-generator@v1
        id: get-token
        with:
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          app-id: ${{ secrets.APP_ID }}

      - name: Pull & update submodules recursively
        run: |
          git config --global url."https://token:${GH_TOKEN}@github.com/emisgroup".insteadOf "https://github.com/emisgroup"
          git config --file=.gitmodules github-runner.url https://token:${GH_TOKEN}@github.com/emisgroup/github-runner.git
          git submodule update --init --recursive
        env:
          GH_TOKEN : ${{ steps.get-token.outputs.token }}

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ./systems-manager-inventory/terraform/
          framework : terraform

      - name: Deploy Terragrunt
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION : ${{ vars.AWS_REGION }}
          ENVIRONMENT : "int"
          AWS_ACCOUNT: ${{ github.event.inputs.Environment }}
          GH_TOKEN : ${{ steps.get-token.outputs.token }}
          DEPLOYER_ROLE_ARN: 'arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.INT_DEPLOYER_ROLE }}'
        uses: ./github-runner/actions/terragrunt-apply
        with:
          terraform-folder: "../systems-manager-inventory/terraform/"
          terragrunt-config: "../terragrunt.hcl"